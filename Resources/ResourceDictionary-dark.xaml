<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:converters="clr-namespace:PoEWizard.Components"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <converters:ValueToColorConverter x:Key="ValueToColorConverter" />
    <converters:BoolToSymbolConverter x:Key="BoolToSymbolConverter" />
    <converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    <converters:SnmpVersionToVisibilityConverter x:Key="SnmpVersionToVisibilityConverter" />
    <converters:BoolToVisibilityConvertter x:Key="BoolToVisibilityConverter" />
    <converters:PoeToPriorityLevelConverter x:Key="PoeToPriorityLevelConverter" />
    <converters:AosVersionToVisibilityConverter x:Key="AosVersionToVisibilityConverter" />
    <converters:BadVersionToVisibilityConverter x:Key="BadVersionToVisibilityConverter" />
    <converters:FpgaToColorConverter x:Key="FpgaToColorConveter" />
    <converters:BoolToPoEModeConverter x:Key="BoolToPoEModeConverter" />
    <converters:ConfigTypeToBoolConverter x:Key="ConfigTypeToBoolConverter" />
    <converters:ConfigTypeToSimbolConverter x:Key="ConfigTypeToSimbolConverter" />
    <converters:TempStatusToVisibilityConverter x:Key="TempStatusToVisibilityConveter" />
    <converters:CpuUsageToColorConverter x:Key="CpuUsageToColorConverter" />
    <converters:CpuUsageToToolTipConverter x:Key="CpuUsageToToolTipConverter" />
    <converters:CpuUsageToVisibilityConverter x:Key="CpuUsageToVisibilityConverter" />
    <converters:DeviceToTooltipConverter x:Key="DeviceToTooltipConverter" />
    <converters:PoeToTooltipConverter x:Key="PoeToTooltipConverter" />
    <converters:ToStringConverter x:Key="ToStringConverter" />

    <BitmapImage x:Key="connected" UriSource="Img/connected.png" />
    <BitmapImage x:Key="disconnected" UriSource="Img/disconnected-dark.png" />
    <BitmapImage x:Key="error" UriSource="Img/error.png" />
    <BitmapImage x:Key="info" UriSource="Img/info.png" />
    <BitmapImage x:Key="question" UriSource="Img/question.png" />
    <BitmapImage x:Key="alert" UriSource="Img/alert.png" />
    <BitmapImage x:Key="remove" UriSource="Img/remove.png" />
    <BitmapImage x:Key="eye_open" UriSource="Img/eye-open-dark.png" />
    <BitmapImage x:Key="eye_closed" UriSource="Img/eye-closed-dark.png" />
    <BitmapImage x:Key="refresh" UriSource="Img/refresh-dark.png" />
    <BitmapImage x:Key="write_memory" UriSource="Img/save-dark.png" />
    <BitmapImage x:Key="reboot" UriSource="Img/reboot-dark.png" />

    <SolidColorBrush x:Key="fontColor" Color="White" />
    <SolidColorBrush x:Key="linkColor" Color="#92caf4" />
    <SolidColorBrush x:Key="mainWindowBackgroundColor" Color="#333" />
    <SolidColorBrush x:Key="popupBackgroundColor" Color="#3c3c3c" />
    <SolidColorBrush x:Key="infoBackgroundColor" Color="#484848" />
    <SolidColorBrush x:Key="borderColor" Color="#888" />
    <SolidColorBrush x:Key="barBackground" Color="#222" />
    <SolidColorBrush x:Key="disabledForeground" Color="#ccc" />
    <SolidColorBrush x:Key="scrollBackground" Color="#3e3e42" />

    <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
    <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
    <SolidColorBrush x:Key="MenuItem.Selected.Border" Color="#FF26A0DA"/>
    <SolidColorBrush x:Key="MenuItem.Selected.Background" Color="#3D26A0DA"/>
    <SolidColorBrush x:Key="Menu.Static.Border" Color="#FF999999"/>
    <SolidColorBrush x:Key="Menu.Static.Background" Color="#444"/>
    <SolidColorBrush x:Key="Menu.Static.Separator" Color="#FFD7D7D7"/>
    <SolidColorBrush x:Key="Menu.Static.Foreground" Color="White"/>

    <LinearGradientBrush x:Key="buttonGradientBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#222" Offset="0"/>
        <GradientStop Color="#555" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="disabledGradientBrush" StartPoint="0.5,1" EndPoint="0.5,0">
        <GradientStop Color="#888" Offset="0"/>
        <GradientStop Color="#bbb" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="grayGradientBrush" StartPoint="0,0.5" EndPoint="1,0.5">
        <GradientStop Color="#888" Offset="0" />
        <GradientStop Color="#222" Offset="1" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="scroll_background" TargetType="RepeatButton">
        <Border Background="Transparent">
        </Border>
    </ControlTemplate>

    <Style x:Key="scroll_thumb_style" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Rectangle Width="8" Fill="#888" RadiusX="5" RadiusY="5">
                    </Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- scrollbar styling-->
    <Style TargetType="{x:Type ScrollBar}" x:Key="defaultScrollbar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="MinWidth" Value="12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#3a3a3a">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>
                        <Track HorizontalAlignment="Center" Name="PART_Track" Width="{TemplateBinding Width}" Maximum="{TemplateBinding Maximum}" Minimum="{TemplateBinding Minimum}"
                                   Value="{TemplateBinding Value}"  IsDirectionReversed="true">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineUpCommand"  />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource scroll_thumb_style}">
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="Height" Value="10"/>
                <Setter Property="MinHeight" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="Bg" SnapsToDevicePixels="true" Background="#7FA7A7A7">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="0.00001*"/>
                                </Grid.ColumnDefinitions>
                                <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineUpCommand"  />
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Template="{StaticResource scroll_background}" Command="ScrollBar.LineDownCommand" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb  Style="{DynamicResource scroll_thumb_stylecrosswise}" Height="8"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- end scrollbar styling-->

    <Style TargetType="DataGrid" x:Key="defaultGrid">
        <Setter Property="Margin" Value="5,0,5,0" />
        <Setter Property="AutoGenerateColumns" Value="False" />
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="MaxHeight" Value="570" />
        <Setter Property="RowBackground" Value="#444" />
        <Setter Property="AlternatingRowBackground" Value="#333" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="HorizontalGridLinesBrush" Value="#666" />
        <Setter Property="VerticalGridLinesBrush" Value="#666" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserSortColumns" Value="False" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Style.Resources>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#222" />
                <Setter Property="Foreground" Value="{StaticResource linkColor}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="Padding" Value="6,2,0,2" />
            </Style>
            <Style TargetType="DataGridCell">
                <Setter Property="Padding" Value="6,2,0,2" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                            <Border Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                        <Setter Property="BorderThickness" Value="0" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource defaultScrollbar}" />
        </Style.Resources>
    </Style>

    <Style TargetType="DataGridColumnHeader" x:Key="gridHeader">
        <Setter Property="Background" Value="#222" />
        <Setter Property="Foreground" Value="{StaticResource linkColor}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Padding" Value="6,2,2,2" />
    </Style>

    <Style TargetType="DataGridCell" x:Key="gridCell">
        <Setter Property="Padding" Value="6,2,2,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#666" />
                <Setter Property="Foreground" Value="Yellow" />
                <Setter Property="BorderBrush" Value="#666" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="DataGridCell" x:Key="gridCellNoHilite" BasedOn="{StaticResource gridCell}">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="BorderThickness" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--menu styling-->
    <Geometry x:Key="Checkmark">F1 M 10.0,1.2 L 4.7,9.1 L 4.5,9.1 L 0,5.2 L 1.3,3.5 L 4.3,6.1L 8.3,0 L 10.0,1.2 Z</Geometry>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Selected.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Selected.Background}" ClipToBounds="False" HorizontalAlignment="Center" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="10"/>
                </Border>
                <ContentPresenter x:Name="menuHeaderContainer" Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock x:Name="menuGestureText" Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Style x:Key="MenuScrollButton" BasedOn="{x:Null}" TargetType="{x:Type RepeatButton}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="templateRoot" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Center" Margin="6" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Style x:Key="{ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="MaxHeight" Value="500"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Column="0" Grid.Row="1">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false" Grid.Row="0" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="0" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource UpArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                        <RepeatButton Grid.Column="0" CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}" Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false" Grid.Row="2" Style="{StaticResource MenuScrollButton}">
                            <RepeatButton.Visibility>
                                <MultiBinding ConverterParameter="100" Converter="{StaticResource MenuScrollingVisibilityConverter}" FallbackValue="Visibility.Collapsed">
                                    <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </RepeatButton.Visibility>
                            <Path Data="{StaticResource DownArrow}" Fill="{StaticResource Menu.Static.Foreground}"/>
                        </RepeatButton>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="{StaticResource Menu.Static.Separator}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Path x:Name="GlyphPanel" Data="{StaticResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                <Setter Property="Fill" TargetName="GlyphPanel" Value="{StaticResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted" Value="True"/>
                    <Condition Property="IsEnabled" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <ControlTemplate x:Key="{ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="22" SnapsToDevicePixels="true">
            <Grid Margin="-1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="22" SharedSizeGroup="MenuItemIconColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="13"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                <Border x:Name="GlyphPanel" BorderBrush="{StaticResource MenuItem.Highlight.Border}" BorderThickness="1" Background="{StaticResource MenuItem.Highlight.Background}" Height="22" Margin="-1,0,0,0" Visibility="Hidden" VerticalAlignment="Center" Width="22">
                    <Path x:Name="Glyph" Data="{DynamicResource Checkmark}" Fill="{StaticResource Menu.Static.Foreground}" FlowDirection="LeftToRight" Height="11" Width="9"/>
                </Border>
                <ContentPresenter Grid.Column="2" ContentSource="Header" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="4" Margin="{TemplateBinding Padding}" Opacity="0.7" Text="{TemplateBinding InputGestureText}" VerticalAlignment="Center"/>
                <Path x:Name="RightArrow" Grid.Column="5" Data="{StaticResource RightArrow}" Fill="{StaticResource Menu.Static.Foreground}" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center"/>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right" VerticalOffset="-3">
                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource Menu.Static.Border}" BorderThickness="1" Background="{StaticResource Menu.Static.Background}" Padding="2">
                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" HorizontalAlignment="Left" Margin="29,2,0,2" Width="1"/>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"/>
                <Setter Property="Fill" TargetName="Glyph" Value="{StaticResource Menu.Disabled.Foreground}"/>
                <Setter Property="Fill" TargetName="RightArrow" Value="{StaticResource Menu.Disabled.Foreground}"/>
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- end menu style-->

    <ControlTemplate x:Key="validationTemplate">
        <Grid>
            <Ellipse Fill="Red" Opacity="0.8" Width="12" Height="12"
                 HorizontalAlignment="Right" VerticalAlignment="Top"/>
            <TextBlock Text="!" FontSize="10" Foreground="White" 
                ToolTip="{Binding Path=/ErrorContent}" 
                HorizontalAlignment="Right" 
                Margin="0,-2,4,0"/>
            <AdornedElementPlaceholder />
        </Grid>
    </ControlTemplate>

    <Style x:Key="mainWindow" TargetType="Window">
        <Setter Property="Background" Value="{StaticResource mainWindowBackgroundColor}" />
    </Style>

    <Style x:Key="_mainGrid" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource mainWindowBackgroundColor}" />
    </Style>

    <Style x:Key="statusBar" TargetType="StatusBar">
        <Setter Property="Background" Value="{StaticResource barBackground}" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
    </Style>

    <Style x:Key="progressBar" TargetType="ProgressBar">
        <Setter Property="Width" Value="100" />
        <Setter Property="Height" Value="10" />
        <Setter Property="Margin" Value="5,0,20,0" />
        <Setter Property="IsIndeterminate" Value="True" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="100" />
    </Style>

    <Style x:Key="_mainMenu" TargetType="Menu">
        <Setter Property="Background" Value="{StaticResource barBackground}" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <DockPanel HorizontalAlignment="Left" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="{x:Type MenuItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                <Style.Triggers>
                    <Trigger Property="Role" Value="TopLevelHeader">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="BorderBrush" Value="Transparent"/>
                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                        <Setter Property="Padding" Value="6,0"/>
                    </Trigger>
                    <Trigger Property="Role" Value="TopLevelItem">
                        <Setter Property="Background" Value="{StaticResource Menu.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Menu.Static.Border}"/>
                        <Setter Property="Foreground" Value="{StaticResource Menu.Static.Foreground}"/>
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=TopLevelItemTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                        <Setter Property="Padding" Value="6,0"/>
                    </Trigger>
                    <Trigger Property="Role" Value="SubmenuHeader">
                        <Setter Property="Template" Value="{DynamicResource {ComponentResourceKey ResourceId=SubmenuHeaderTemplateKey, TypeInTargetAssembly={x:Type MenuItem}}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="popupWindow" TargetType="Grid">
        <Setter Property="Background" Value="{StaticResource popupBackgroundColor}" />
    </Style>

    <Style x:Key="cfgWindow" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource popupBackgroundColor}" />
        <Style.Resources>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Padding" Value="10,10,10,0" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="10,5,10,0" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="CaretBrush" Value="{StaticResource fontColor}" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="10,5,10,0" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="CaretBrush" Value="{StaticResource fontColor}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="popupPanel" TargetType="StackPanel">
        <Setter Property="Background" Value="{StaticResource popupBackgroundColor}" />
        <Style.Resources>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Padding" Value="10,10,10,0" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
            </Style>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="10,5,10,0" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="CaretBrush" Value="{StaticResource fontColor}" />
            </Style>
            <Style TargetType="{x:Type PasswordBox}">
                <Setter Property="Height" Value="25" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Margin" Value="10,5,10,0" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="CaretBrush" Value="{StaticResource fontColor}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="gridBorder" TargetType="Border">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="5,5,5,5" />
        <Setter Property="BorderThickness" Value="0.5" />
        <Setter Property="BorderBrush" Value="{StaticResource borderColor}" />
    </Style>

    <Style x:Key="cfgTitle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource grayGradientBrush}" />
        <Setter Property="Height" Value="50" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="cfgHeader" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="10,0,0,0" />
    </Style>

    <Style TargetType="Label" x:Key="rightJustifLabel">
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="Label" x:Key="leftJustifLabel" BasedOn="{StaticResource rightJustifLabel}">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="0,10,0,0" />
    </Style>

    <Style TargetType="Label" x:Key="titleLabel">
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,4" />
        <Setter Property="FontSize" Value="14" />
    </Style>

    <Style x:Key="fileBox" TargetType="RichTextBox">
        <Setter Property="Background" Value="{StaticResource popupBackgroundColor}" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Block.LineHeight" Value="2" />
        <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
    </Style>

    <Style TargetType="TextBlock" x:Key="aboutTitle">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Margin" Value="0,10,0,20" />
    </Style>

    <Style TargetType="TextBlock" x:Key="aboutParagraph">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="Margin" Value="0,10,10,5" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
    </Style>

    <Style TargetType="TextBlock" x:Key="popupTitle">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Margin" Value="0,10,10,5" />
    </Style>

    <Style TargetType="TextBlock" x:Key="toolTip">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource linkColor}" />
        <Style.Resources>
            <Style TargetType="ToolTip">
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="{StaticResource barBackground}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="TextBlock" x:Key="devToolTip">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Style.Resources>
            <Style TargetType="ToolTip">
                <Setter Property="FontFamily" Value="Courier New" />
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="{StaticResource barBackground}" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Button" x:Key="defaultButton">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="{StaticResource buttonGradientBrush}"/>
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="24"/>
        <Setter Property="Foreground" Value="{StaticResource fontColor}"/>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Margin" Value="10,10,10,5" />
        <Setter Property="Padding" Value="0,0,0,2" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="btnPresenter"
                              Content="{TemplateBinding Content}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource disabledGradientBrush}" />
                <Setter Property="Foreground" Value="{StaticResource disabledForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="smallButton" BasedOn="{StaticResource defaultButton}">
        <Setter Property="Width" Value="50" />
    </Style>

    <Style TargetType="Button" x:Key="largeButton" BasedOn="{StaticResource defaultButton}">
        <Setter Property="Width" Value="112" />
        <Setter Property="Height" Value="28" />
    </Style>

    <Style TargetType="Button" x:Key="deleteButton">
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style TargetType="Button" x:Key="eyeButton" BasedOn="{StaticResource deleteButton}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Margin" Value="5,0,10,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" 
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness ="{TemplateBinding BorderThickness}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="BorderBrush" Value="#5DA3C1" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
        <Style.Resources>
            <Style TargetType="Image">
                <Setter Property="Height" Value="16" />
                <Setter Property="Width" Value="16" />
            </Style>
        </Style.Resources>
    </Style>

    <Style TargetType="Border" x:Key="aboutBorder">
        <Setter Property="BorderBrush" Value="{StaticResource borderColor}" />
        <Setter Property="BorderThickness" Value="0,0.5,0,0" />
        <Setter Property="Margin" Value="0,0,10,0" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource aboutBorder}" x:Key="propsBorder">
        <Setter Property="Margin" Value="10,0,10,0" />
        <Setter Property="Padding" Value="5" />
    </Style>

    <Style TargetType="Border" x:Key="msgBoxTitleBorder">
        <Setter Property="BorderBrush" Value="{StaticResource borderColor}" />
        <Setter Property="BorderThickness" Value="0,0,0,0.5" />
        <Setter Property="Margin" Value="10,0,10,0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="msgBoxTitle">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Margin" Value="10" />
    </Style>

    <Style TargetType="TextBlock" BasedOn="{StaticResource aboutParagraph}" x:Key="msgBoxBody">
        <Setter Property="MaxWidth" Value="780" />
        <Setter Property="Margin" Value="0,20,20,20" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>

    <Style TargetType="Border" x:Key="infoBorder">
        <Setter Property="Height" Value="100"/>
        <Setter Property="Width" Value="400"/>
        <Setter Property="BorderBrush" Value="{StaticResource borderColor}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="{StaticResource infoBackgroundColor}"/>
        <Style.Resources>
            <Style TargetType="TextBlock" BasedOn="{StaticResource aboutParagraph}">
                <Setter Property="Margin" Value="0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="Hyperlink">
                <Setter Property="Foreground" Value="{StaticResource linkColor}"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="buttonBar" TargetType="StackPanel">
        <Setter Property="Orientation" Value="Horizontal" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,5,10,5" />
        <Style.Resources>
            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource defaultButton}">
                <Setter Property="Margin" Value="10,0,10,0" />
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="infoVal" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="Padding" Value="10,2,2,2" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="Label" x:Key="keyLabel">
        <Setter Property="Foreground" Value="{StaticResource linkColor}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="10,2,2,2" />
        <Setter Property="FontSize" Value="12" />
    </Style>

    <Style TargetType="Label" x:Key="valLabel" BasedOn="{StaticResource keyLabel}">
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
    </Style>

    <Style TargetType="Image" x:Key="warnImg">
        <Setter Property="Source" Value="Img/warning.png" />
        <Setter Property="Margin" Value="5,0" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
    </Style>

    <Style x:Key="selectOptionTitle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource grayGradientBrush}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Margin" Value="0,0,0,10" />
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="1" />
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="selectOptionHeader" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource fontColor}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
    </Style>

    <!-- combobox style -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#FF3F3F3F"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  BorderThickness="1" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 "
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="defaultCombo" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Margin" Value="5,10,0,0" />
        <Setter Property="Background" Value="#333" />
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#FF3F3F3F"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">
                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                Background="#FF3F3F3F"
                                BorderThickness="1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#FF4F4F4F"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--end combobox style -->

    <Style x:Key="toggleSwitch" TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,10,0,0" />
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="fillBrush">Lime</SolidColorBrush>
                        <SolidColorBrush x:Key="borderBrush">Gray</SolidColorBrush>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent" SnapsToDevicePixels="True" Height="18">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="34" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="markGrid" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="Transparent" Height="16" x:Name="moveEllipse">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation From="0" To="16" Duration="0:0:0.25" Storyboard.TargetProperty="Width" />
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation To="0" Duration="0:0:0.25" 
                                                         Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Rectangle RadiusX="6" RadiusY="6" 
                                       Grid.ColumnSpan="2"
                                       Name="line"
                                       StrokeThickness=".8"
                                       IsHitTestVisible="False"
                                       Margin="1,4,1,4">
                                <Rectangle.Style>
                                    <Style TargetType="{x:Type Rectangle}">
                                        <Setter Property="Fill" Value="LightPink"/>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Ellipse Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                     StrokeThickness=".8"
                                     Name="spot"
                                     Grid.Column="1"
                                     HorizontalAlignment="Left">
                                <Ellipse.Style>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Fill" Value="Red"/>
                                        <Setter Property="Stroke" Value="Maroon"/>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>

                        </Grid>
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" 
                                Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" 
                                RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Stroke" TargetName="line" Value="DarkGray"/>
                            <Setter Property="Stroke" TargetName="spot" Value="DarkGray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"  Value=".5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Stroke" TargetName="line" Value="Black"/>
                            <Setter Property="Stroke" TargetName="spot" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Fill" TargetName="line" Value="LightGreen"/>
                            <Setter Property="Fill" TargetName="spot" Value="Lime"/>
                            <Setter Property="Stroke" TargetName="spot" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Fill" TargetName="line" Value="lightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Resources>
            <Style TargetType="ToolTip">
                <Setter Property="Foreground" Value="{StaticResource fontColor}" />
                <Setter Property="Background" Value="{StaticResource barBackground}" />
            </Style>
        </Style.Resources>
    </Style>

</ResourceDictionary>